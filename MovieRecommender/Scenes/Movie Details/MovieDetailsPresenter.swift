//
//  MovieDetailsPresenter.swift
//  MovieRecommender
//
//  Created by Djordje Ljubinkovic on 9/22/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsPresentationLogic: LoadingLogic {
    func presentInitialState(_ response: MovieDetails.InitialState.Response)
    func presentPlayMovieTrailer(_ response: MovieDetails.PlayMovie.Response)
}

class MovieDetailsPresenter: MovieDetailsPresentationLogic {
    var loadable: HasLoadingView? { return viewController }

    weak var viewController: MovieDetailsDisplayLogic?

    // MARK: Presentation Logic
    func presentInitialState(_ response: MovieDetails.InitialState.Response) {
        let movieThumbnailStyle = ViewStyle<UIImageView> {
            guard let imgUrl = response.movie.imageUrl else { return }
            $0.loadImage(at: imgUrl)
        }
        let movieTitleStyle = ViewStyle<UILabel> {
            $0.text = response.movie.title
        }
        let movieSummaryStyle = ViewStyle<UILabel> {
            $0.text = response.movie.summary
        }

        let viewModel = MovieDetails.InitialState.ViewModel(
            movieThumbnailStyle: movieThumbnailStyle,
            movieTitleStyle: movieTitleStyle,
            movieSummaryStyle: movieSummaryStyle
        )
        viewController?.displayInitialState(viewModel)
    }

    func presentPlayMovieTrailer(_ response: MovieDetails.PlayMovie.Response) {
        viewController?.displayPlayMovieTrailer(response)
    }
}

