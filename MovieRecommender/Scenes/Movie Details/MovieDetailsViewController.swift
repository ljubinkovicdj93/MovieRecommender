//
//  MovieDetailsViewController.swift
//  MovieRecommender
//
//  Created by Djordje Ljubinkovic on 9/22/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsDisplayLogic: HasLoadingView {
    func displayInitialState(_ viewModel: MovieDetails.InitialState.ViewModel)
    func displayPlayMovieTrailer(_ viewModel: MovieDetails.PlayMovie.ViewModel)
}

class MovieDetailsViewController: UIViewController {

    // MARK: - Properties
    var interactor: MovieDetailsBusinessLogic?
    var router: MovieDetailsRouterInput?

    // MARK: - Outlets
    @IBOutlet weak var movieThumbnail: UIImageView!
    @IBOutlet weak var movieTitleLabel: UILabel!
    @IBOutlet weak var movieSummary: UILabel!

    // MARK: - Object Lifecycle
    override func awakeFromNib() {
        super.awakeFromNib()
        MovieDetailsConfigurator.sharedInstance.configure(self)
    }

    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()

        interactor?.requestInitialState()
    }
}

// MARK: - IBActions
extension MovieDetailsViewController {
    @IBAction func onPlayTapped(_ sender: UIButton) {
        interactor?.playMovieTrailer()
    }

    @IBAction func onCloseTapped(_ sender: UIButton) {
        dismiss(animated: true, completion: nil)
    }
}

// MARK: - Display Logic
extension MovieDetailsViewController: MovieDetailsDisplayLogic {
    func displayInitialState(_ viewModel: MovieDetails.InitialState.ViewModel) {
        viewModel.movieThumbnailStyle.apply(to: movieThumbnail)
        viewModel.movieTitleStyle.apply(to: movieTitleLabel)
        viewModel.movieSummaryStyle.apply(to: movieSummary)
    }

    func displayPlayMovieTrailer(_ viewModel: MovieDetails.PlayMovie.ViewModel) {
        present(viewModel.webViewController, animated: true)
    }
}
