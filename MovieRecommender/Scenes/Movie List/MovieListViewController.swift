//
//  MovieListViewController.swift
//  MovieRecommender
//
//  Created by Djordje Ljubinkovic on 9/22/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieListDisplayLogic: HasLoadingView {
    func displayPopularMovies(_ viewModel: MovieList.FetchPopularMovies.ViewModel)
    func displaySelectedMovie()
}

class MovieListViewController: UIViewController {

    // MARK: - Properties
    var interactor: MovieListBusinessLogic?
    var router: MovieListRouterInput?

    private var moviesDataSource: MoviesDataSource? {
        didSet {
            tableView.reloadData()
        }
    }

    // MARK: - Outlets
    @IBOutlet weak var tableView: UITableView! {
        didSet {
            tableView.registerCell(with: MovieCell.self)
        }
    }

    // MARK: - Object Lifecycle
    override func awakeFromNib() {
        super.awakeFromNib()
        MovieListConfigurator.sharedInstance.configure(self)
    }

    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.fetchPopularMovies()
    }
}

// MARK: - Display Logic
extension MovieListViewController: MovieListDisplayLogic {
    func displayPopularMovies(_ viewModel: MovieList.FetchPopularMovies.ViewModel) {
        self.moviesDataSource = MoviesDataSource(tableView: tableView, array: viewModel.popularMovies)
        self.moviesDataSource!.registerDidSelect { [weak self] movie, _ in guard let self = self else { return }
            guard let selectedMovie = movie else { return }
            self.interactor?.selectMovie(MovieList.SelectMovie.Request(selectedMovie: selectedMovie))
        }
    }

    func displaySelectedMovie() {
        router?.showMovieDetails()
    }
}
